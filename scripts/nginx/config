map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Backends
upstream fikrat  {
  server 127.0.0.1:7000;
  server 127.0.0.1:7001;
  server 127.0.0.1:7002;
  server 127.0.0.1:7003;
}

server {
  listen 80 http2;
  listen [::]:80;
  server_name fikrat-expertise.epslon.ma;
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl;

  include snippets/ssl-fikrat.epsilon.ma.conf;
  include snippets/ssl-params.conf;

  server_name fikrat-expertise.epslon.ma;

  access_log          /dev/null;
  error_log           /dev/null;

  root  /opt/fikrat/dist;

  # charset koi8-r;

  keepalive_timeout   70;

  open_file_cache          max=2000 inactive=20s;
  open_file_cache_valid    30s;
  open_file_cache_min_uses 5;
  open_file_cache_errors   off;

  # Common

  proxy_redirect      off;
  proxy_buffering     off;

  proxy_set_header    X-Real-IP $remote_addr;
  proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header    Host $http_host;
  proxy_set_header    X-Forwarded-Proto $scheme;
  proxy_http_version  1.1;

  proxy_buffers 8 32k;
  proxy_buffer_size 64k;

  location / {
    try_files         $uri $uri/ @proxy;
  }

  location ~ \.(js|css)$ {
    gzip_static       on;
    expires           max;
    add_header        Cache-Control public;
    add_header        Last-Modified "";
    add_header        ETag "";
  }

  location /subscriptions {
    proxy_pass       http://fikrat;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    access_log /dev/null;
    error_log  /var/log/nginx/fikrat-ws-error.log debug;
  }

  location @proxy {
    proxy_buffers     100 128k;
    proxy_buffer_size 128k;
    proxy_pass        http://fikrat;

    access_log /dev/null;
    error_log  /var/log/nginx/fikrat-error.log;

  }

  client_max_body_size 100M;
}

